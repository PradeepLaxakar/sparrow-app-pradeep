name: Sonarqube

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - development

  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    permissions: # permission to comment a PR
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      # If you wish to fail your job when the Quality Gate is red, uncomment the following lines.
      # Check the Quality Gate status.
      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      # # #Enforce a timeout to fail the step after a specific time.
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} # OPTIONAL

      # PR Decoration
      - name: SonarQube Pull Request Comment
        if: always()
        uses: campos-pay/sonarqube-pr-comment@main
        with:
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          sonar_host_url: ${{ secrets.SONAR_HOST_URL }}
          sonar_projectkey: ${{ vars.SONAR_PROJECT_KEY }} #github.event.repository.name
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repo_name: ${{ github.repository }}
          pr_number: ${{ github.event.pull_request.number }}

      # Generate Badges
      - name: Generate SonarQube Badges
        run: |
          # Call the badge generation script
          bash ${GITHUB_ACTION_PATH}/badge.svg.sonarqube.sh

      # Set outputs
      - name: Set Badge Outputs
        id: result
        run: |
          echo 'list<<EOF' >> $GITHUB_OUTPUT
          bash ${GITHUB_ACTION_PATH}/print-result.sh list >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          echo 'markdown<<EOF' >> $GITHUB_OUTPUT
          bash ${GITHUB_ACTION_PATH}/print-result.sh markdown >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      # Post Badges as Comment
      - name: Post Badges on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const { markdown } = process.env;
            await github.rest.issues.createComment({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              issue_number: context.payload.pull_request.number,
              body: markdown
            });
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          markdown: ${{ steps.result.outputs.markdown }}
                    
# ========================= ORIGINAL WORKFLOW ================================================
# on:
#   push:
#     branches:
#       - development

#   pull_request:
#       types: [opened, synchronize, reopened]
  
#   workflow_dispatch:

# jobs:
#   sonarqube:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master # Step for scanning your project

#       - name: Wait for the quality gate result
#         run: sleep 5

#       - uses: phwt/sonarqube-quality-gate-action@v1
#         id: quality-gate-check
#         with:
#           sonar-project-key: ${{ vars.PROJECT_KEY }}
#           sonar-host-url: ${{ secrets.SONAR_HOST_URL }}
#           sonar-token: ${{ secrets.SONAR_TOKEN }}
#           github-token: ${{ secrets.GITHUB_TOKEN }} #PR_GITHUB_TOKEN

#       - name: Output result
#         run: |
#           echo "${{ steps.quality-gate-check.outputs.project-status }}"
#           echo "${{ steps.quality-gate-check.outputs.quality-gate-result }}"